version: "3.8"
services:

  vite:
    container_name: vite
    build:
      context: ./vite
    env_file: .env
    restart: on-failure
    volumes:
      - ./vite:/usr/src/app
    networks:
      - vite

  postgres:
    container_name: postgres
    image: postgres:alpine
    env_file: .env
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  nest:
    container_name: nest
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./nest
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./nest:/usr/src/app
    networks:
      - db
      - nest
    # healthcheck:
    #   test: ["CMD-SHELL", "wget --spider http://localhost:3000"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 10
    #   start_period: 10s

  nginx:
    container_name: nginx
    # * Restart deja quand nest n'est pas encore lance mais plus propre
    # ! Ne pas utiliser pour le dev (s'arrete a la moindre erreur si le health_check se fait)
    # depends_on:
    #   nest:
    #     condition: service_healthy
    build:
      context: ./nginx
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./vite/dist:/var/www/dist
    ports:
      - 8080:8080
    networks:
      - vite
      - nest

volumes:
  postgres-data:

networks:
  vite:
  nest:
  db:
