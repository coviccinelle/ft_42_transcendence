version: "3"

services:
  db:
    container_name: db
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    # ports a retirer plus tard
    ports:
      - 5432:5432
    networks:
      - api-network

  adminer:
    container_name: adminer
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080

  nestjs:
    container_name: nestjs
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile_inline: |
        FROM node
        WORKDIR /home/node/app
        COPY package*.json ./
        RUN npm install
        COPY tsconfig*.json ./
        COPY src ./src
        COPY .env_dev ./.env
        COPY prisma ./prisma
        RUN npx prisma generate
        CMD ["npm", "run", "start:dev"]
      # CMD ["npm", "run", "start"]
    volumes:
      - ./backend:/home/node/app
  #   - ./backend/src:/app/src -> mine version, didn't work haha
    ports:
      - 3000:3000
    networks:
      - api-network
      - front-network

  vite:
    container_name: vite
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile_inline: |
        FROM node
        WORKDIR /home/node/app
        COPY package*.json ./
        RUN npm install
        COPY tsconfig*.json ./
        COPY src ./src
        CMD ["npm", "run", "dev"]
      # CMD ["npm", "run", "build"]
    volumes:
      - ./frontend:/home/node/app
  #   - ./frontend/src:/app/src
    ports:
      - 5173:5173
    networks:
      - front-network

networks:
  api-network:
    driver: bridge
  front-network:
    driver: bridge

volumes:
  postgres-data:
  vite-modules:
  nest-modules:
